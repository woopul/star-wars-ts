{"version":3,"sources":["components/AddMovieForm/AddMovieForm.module.scss","components/ExpandableItem/ExpandableItem.module.scss","components/MovieTable/MovieTable.module.scss","components/Header/Header.module.scss","components/MovieItem/MovieItem.module.scss","components/MovieList/MovieList.module.scss","components/PlanetItem/PlanetItem.module.scss","components/Loader/Loader.module.scss","components/Divider/Divider.module.scss","components/AddMovie/AddMovie.module.scss","store/movies/movies.actions.ts","assets/icons/LOGO.svg","components/Header/Header.tsx","assets/icons/loading.svg","components/Loader/Loader.tsx","components/MovieTable/MovieTable.tsx","api/api.types.ts","store/movies/movies.reducer.ts","store/store.ts","api/usePlanetStore.ts","components/MovieItem/MovieItem.tsx","store/movies/movies.selectors.ts","assets/icons/ARROW CLOSE.svg","assets/icons/ARROW OPEN.svg","components/ExpandableItem/ExpandableItem.tsx","api/api.ts","api/useFetch.ts","components/MovieList/MovieList.tsx","components/Divider/Divider.tsx","components/PlanetItem/PlanetItem.tsx","components/AddMovieForm/AddMovieForm.tsx","components/AddMovie/AddMovie.tsx","components/App/App.tsx","index.tsx"],"names":["module","exports","MoviesActionType","Header","className","styles","header","src","logo","alt","header__logo","Loader","size","loaderStyle","width","height","style","Load","useStyles","makeStyles","TableContainer","boxShadow","table","minWidth","borderBottom","head","fontSize","color","name","headers","MovieTable","rows","matchesResponsive","useMediaQuery","mobileTableMap","map","row","_","values","omit","classes","MobileMainTablesContainer","MovieGrid","value","i","category","id","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","rotation_period","orbital_period","diameter","climate","surface_water","population","pickData","initialState","movies","planets","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","action","type","POST_MOVIE","title","payload","planetsUrl","SET_MOVIES","SET_PLANETS","ADD_PLANET","applyMiddleware","reduxThunk","dispatch","getCashedPlanets","planetsData","cashedPlanets","JSON","parse","localStorage","getItem","usePlanetStore","urls","useState","cashed","setChashedPlanets","error","setError","isLoading","setIsLoading","useEffect","fetchPlanets","setItem","stringify","a","url","includes","axios","get","then","res","data","catch","err","message","fetchedData","planetDataToStore","pick","prevState","planetData","console","log","MovieItem","movie","isOpen","planetsDataToDisplay","storedPlanets","useSelector","find","getSelectedPlanetsData","MovieItemContainer","_extends","Object","assign","target","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","cx","cy","r","transform","fill","_ref3","d","stroke","strokeWidth","strokeLinecap","SvgArrowclose","_ref","svgRef","titleId","props","viewBox","ref","ForwardRef","SvgArrowopen","ExpandableItem","text","children","setIsOpen","propsChildren","React","Children","toArray","child","cloneElement","container","item","expanded","item__text","onClick","expandedField","starWarsApi","create","baseURL","useFetchMovies","useDispatch","setMovies","moviesQuery","results","setMoviesStore","finally","MovieList","MovieListContent","Divider","PlanetItem","handleRemove","remove","AddMovieForm","movieTitle","addPlanet","formData","setFormData","autocompleteFetch","setAutocompleteFetch","selectedPlanets","setSelectedPlanets","errors","setErrors","touched","setTouched","validate","nextErrors","test","handleBlur","handleChange","handleRemovePlanet","filter","planet","AddMovieFormContainer","onSubmit","event","movieData","preventDefault","p","UPDATE_PLANETS","InputField","htmlFor","placeholder","errorInput","onChange","onBlur","errorMsg","autoComplete","hints","some","handleSelectPlanet","disabled","AddMovie","AddMovieContainer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.661b15c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddMovieFormContainer\":\"AddMovieForm_AddMovieFormContainer__2fjHs\",\"errorInput\":\"AddMovieForm_errorInput__1XxvT\",\"correctInput\":\"AddMovieForm_correctInput__1NVUZ\",\"errorMsg\":\"AddMovieForm_errorMsg__2rlsi\",\"InputField\":\"AddMovieForm_InputField__38gaI\",\"hints\":\"AddMovieForm_hints__2j0YN\",\"selectedPlanets\":\"AddMovieForm_selectedPlanets__2Co5D\",\"planetItem\":\"AddMovieForm_planetItem__NdwPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ExpandableItem_container__2xTtA\",\"item\":\"ExpandableItem_item__3tJHU\",\"item__text\":\"ExpandableItem_item__text__xc0a-\",\"expanded\":\"ExpandableItem_expanded__1pXsj\",\"expandedField\":\"ExpandableItem_expandedField__2y0Fm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"MovieTable_Container__1Krdx\",\"table\":\"MovieTable_table__2vEl7\",\"head\":\"MovieTable_head__3cSmK\",\"name\":\"MovieTable_name__1Xb-A\",\"MobileMainTablesContainer\":\"MovieTable_MobileMainTablesContainer__MCIlz\",\"MovieGrid\":\"MovieTable_MovieGrid__3_jOY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__wfufl\",\"header__logo\":\"Header_header__logo__1e-rT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieItemContainer\":\"MovieItem_MovieItemContainer__1tVus\",\"error\":\"MovieItem_error__3pzMr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieList\":\"MovieList_MovieList__25lKZ\",\"MovieList-open\":\"MovieList_MovieList-open__SFsCH\",\"MovieListContent\":\"MovieList_MovieListContent__30pYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlanetItem\":\"PlanetItem_PlanetItem__TS0G5\",\"remove\":\"PlanetItem_remove__19LTj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__1v9y9\",\"load\":\"Loader_load__1E-5i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Divider\":\"Divider_Divider__hYyw0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddMovieContainer\":\"AddMovie_AddMovieContainer__1y7Bx\"};","import _ from 'lodash';\r\nimport { IMovie, IPlanets } from './../../api/api.types';\r\n\r\n\r\nexport enum MoviesActionType {\r\n  SET_MOVIES = \"SET_MOVIES\",\r\n  POST_MOVIE = \"POST_MOVIES\",\r\n  SET_PLANETS = \"SET_PLANETS\",\r\n  ADD_PLANET = \"ADD_PLANET\",\r\n  UPDATE_PLANETS = \"UPDATE_PLANETS\"\r\n}\r\n\r\n\r\nexport interface ISetMoviesAction {\r\n  type: MoviesActionType.SET_MOVIES,\r\n  payload: IMovie[]\r\n}\r\n\r\nexport interface IPostMovieAction {\r\n  type: MoviesActionType.POST_MOVIE,\r\n  payload: IMovie\r\n}\r\n\r\nexport interface ISetPlanetsAction {\r\n  type: MoviesActionType.SET_PLANETS,\r\n  payload: IPlanets[]\r\n}\r\n\r\nexport interface IAddPlanetAction {\r\n  type: MoviesActionType.ADD_PLANET,\r\n  payload: IPlanets\r\n}\r\n\r\nexport interface IUpdatePLanets {\r\n  type: MoviesActionType.UPDATE_PLANETS,\r\n  payload: IPlanets[]\r\n}\r\n\r\nexport type MoviesAction = ISetMoviesAction | ISetPlanetsAction | IPostMovieAction | IAddPlanetAction | IUpdatePLanets;\r\n\r\nexport const setMoviesStore = (movies: IMovie[]): ISetMoviesAction => ({ type: MoviesActionType.SET_MOVIES, payload: movies });\r\n\r\nexport const postMovie = (movieData: IMovie): IPostMovieAction => ({ type: MoviesActionType.POST_MOVIE, payload: movieData });\r\n\r\nexport const setPlanetStore = (planetsData: IPlanets[]): ISetPlanetsAction => ({ type: MoviesActionType.SET_PLANETS, payload: planetsData });\r\n\r\nexport const addPlanetStore = (planetData: IPlanets): IAddPlanetAction => ({ type: MoviesActionType.ADD_PLANET, payload: planetData });\r\n\r\nexport const UpdatePlanetStore = (planetData: IPlanets[]): IUpdatePLanets => {\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  // const storedPlanets = useSelector(state => state.planets)\r\n  // // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  // const storedUrls = _.pluck(storedPlanets, 'url')\r\n  // planetData.map(p => { return storedUrls.includes(p.url) ? undefined : p });\r\n  return { type: MoviesActionType.UPDATE_PLANETS, payload: planetData }\r\n\r\n};\r\n","export default __webpack_public_path__ + \"static/media/LOGO.f12a06d3.svg\";","import React from \"react\";\r\nimport styles from './Header.module.scss';\r\nimport logo from \"../../assets/icons/LOGO.svg\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className={styles.header}>\r\n      <img src={logo} alt=\"\" className={styles.header__logo} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/loading.bffa8516.svg\";","import React from \"react\";\r\nimport Load from \"../../assets/icons/loading.svg\";\r\n\r\nimport styles from './Loader.module.scss'\r\n\r\ninterface LoaderProps {\r\n  size?: number\r\n}\r\n\r\nconst Loader = ({size = 50} : LoaderProps) => {\r\n  const loaderStyle = {\r\n    width: `${size}px`,\r\n    height: `${size}px`\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <img style={loaderStyle} className={styles.Loader} src={Load} alt=\"\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { IPlanets } from '../../api/api.types';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport styles from './MovieTable.module.scss'\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles({\r\n  TableContainer: {\r\n    boxShadow: 'none',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n    '& td': {\r\n      borderBottom: 'none',\r\n    }\r\n  },\r\n  head: {\r\n    '& th': {\r\n      fontSize: '0.8rem',\r\n      color: 'black',\r\n      '&:first-child': {\r\n        color: '#00687F',\r\n      }\r\n    }\r\n  },\r\n  name: {\r\n    color: '#00687F',\r\n  }\r\n});\r\n\r\nconst headers = [\"Planet Name\", \"Rotation Period\", \"Orbital period\", \"Diameter\", \"Climate\", \"Surface water\", \"Population\"];\r\n\r\ninterface IMovieTable {\r\n  rows: IPlanets[]\r\n}\r\n\r\nconst MovieTable = ({ rows }: IMovieTable) => {\r\n  const matchesResponsive = useMediaQuery('(max-width:600px)')\r\n  const mobileTableMap = rows.map(row => _.values(_.omit(row, 'url'))) //arr[][] of planet data values\r\n  const classes = useStyles();\r\n\r\n  if (matchesResponsive) {\r\n    return (\r\n      <div key='moblieTable' className={styles.MobileMainTablesContainer}>\r\n        {mobileTableMap.map(row => (\r\n          <div key={row[0]} className={styles.MovieGrid}>\r\n            {row.map((value, i) => (<>\r\n              <div className={styles.category}>{headers[i]}</div>\r\n              <div className={`${styles.value} ${i===0 && styles.name}`}>{value}</div>\r\n            </>))\r\n            }\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <TableContainer key='deskTable' id=\"Container\" className={classes.TableContainer} component={Paper}>\r\n      <Table size='small' className={classes.table} aria-label=\"simple table\">\r\n        <TableHead className={classes.head}>\r\n          <TableRow>\r\n            {headers.map(header => <TableCell>{header}</TableCell>)}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell className={classes.name}>{row.name}</TableCell>\r\n              <TableCell >{row.rotation_period}</TableCell>\r\n              <TableCell >{row.orbital_period}</TableCell>\r\n              <TableCell >{row.diameter}</TableCell>\r\n              <TableCell >{row.climate}</TableCell>\r\n              <TableCell >{row.surface_water}</TableCell>\r\n              <TableCell >{row.population}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default MovieTable;","export interface IMoviesQuery {\r\n  movies: IMovie[];\r\n  error: string | null;\r\n}\r\n\r\nexport interface IMovie {\r\n  title: string;\r\n  planetsUrl: string[];\r\n}\r\n\r\nexport interface IPlanets {\r\n  url:string;\r\n  name: string,\r\n  rotation_period: string,\r\n  orbital_period: string,\r\n  diameter: string,\r\n  climate: string,\r\n  gravity: string,\r\n  terrain: string,\r\n  surface_water: string,\r\n  population: string,\r\n}\r\n\r\nexport const pickData = [\r\n  \"url\",\r\n  \"name\",\r\n  \"rotation_period\",\r\n  \"orbital_period\",\r\n  \"diameter\",\r\n  \"climate\",\r\n  \"surface_water\",\r\n  \"population\"\r\n]","import { IPlanets } from './../../api/api.types';\r\nimport { IMovieState } from './../store.types';\r\nimport { MoviesAction, MoviesActionType } from './movies.actions';\r\n\r\nconst initialState : IMovieState = {\r\n  movies: [],\r\n  planets: []\r\n}\r\n\r\nexport const moviesReducer = (state: IMovieState = initialState, action: MoviesAction) => {\r\n  switch(action.type) {\r\n    case MoviesActionType.POST_MOVIE:\r\n      return {\r\n        ...state,\r\n        movies : [\r\n          ...state.movies, \r\n          { title: action.payload.title, planetsUrl: action.payload.planetsUrl }\r\n        ]\r\n      }\r\n    case MoviesActionType.SET_MOVIES:\r\n      return {\r\n        ...state,\r\n        movies : action.payload\r\n      }\r\n\r\n    case MoviesActionType.SET_PLANETS: \r\n      // const newPlanetState: IPlanets[];\r\n      // const action.payload.forEach(newPlanet =>{if(state.planets.filter(stored => stored.url === if newPlanet.url).length>0) )\r\n      return {\r\n        ...state,\r\n        planets: [...action.payload] \r\n      }\r\n\r\n    case MoviesActionType.ADD_PLANET: \r\n      return {\r\n        ...state,\r\n        planets: [...state.planets, action.payload] \r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { useDispatch } from 'react-redux';\r\nimport { moviesReducer } from './movies/movies.reducer';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  moviesReducer,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nexport const dispatch = () => store.dispatch;\r\n","import { setPlanetStore, addPlanetStore } from './../store/movies/movies.actions';\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { IPlanets, pickData } from './api.types';\r\nimport { dispatch } from '../store/store';\r\n\r\nconst getCashedPlanets = () => {\r\n  const cashedPlanets: IPlanets[] = JSON.parse(localStorage.getItem('planets')) || [];\r\n  dispatch()(setPlanetStore(_.values(cashedPlanets)));\r\n  return cashedPlanets;\r\n}\r\n\r\nexport const usePlanetStore = (urls?: string[]) => {\r\n  const [cashed, setChashedPlanets] = useState<IPlanets[]>(getCashedPlanets)\r\n  const [error, setError] = useState<string>('');\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    fetchPlanets();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n      !isLoading && localStorage.setItem('planets', JSON.stringify(cashed));\r\n  }, [isLoading]);\r\n\r\n  const fetchPlanets = async () => {\r\n    for (const url of urls) {\r\n      if (!_.map(cashed, 'url').includes(url)) {\r\n        const fetchedData = await axios.get(url).then(res => res.data).catch(err => setError(err.message));\r\n        const planetDataToStore = _.pick(fetchedData, pickData);\r\n\r\n        setChashedPlanets(prevState => ([...prevState, planetDataToStore]));\r\n        dispatch()(addPlanetStore(planetDataToStore));\r\n\r\n      } else console.log('%c IN STORE! ', 'background: #222; color: #bada55');\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return { isLoading, error }\r\n}\r\n\r\nexport default usePlanetStore;","import React from 'react';\r\nimport Loader from '../Loader/Loader'\r\nimport MovieTable from '../MovieTable/MovieTable'\r\nimport { IMovie, IPlanets } from '../../api/api.types'\r\nimport usePlanetStore from '../../api/usePlanetStore';\r\nimport { getSelectedPlanetsData } from '../../store/movies/movies.selectors';\r\nimport styles from './MovieItem.module.scss';\r\n\r\ninterface IMovieItem {\r\n  movie: IMovie\r\n  isOpen?: boolean\r\n}\r\n\r\nconst MovieItem = ({ movie, isOpen }: IMovieItem) => {\r\n  const { planetsUrl } = movie;\r\n  const { isLoading, error } = usePlanetStore(planetsUrl)\r\n  const planetsDataToDisplay : IPlanets[] = getSelectedPlanetsData(planetsUrl);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ?\r\n        <Loader /> :\r\n        <div className={styles.MovieItemContainer}>\r\n          {error && <div className={styles.error}></div>}\r\n          <MovieTable rows={planetsDataToDisplay} />\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MovieItem;","import { IPlanets, IMovie } from './../../api/api.types';\r\nimport { useSelector } from 'react-redux';\r\nimport _ from 'lodash';\r\n\r\nexport const getPlanets = () : IPlanets[] => {\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  return useSelector(state => state.planets)\r\n}\r\n\r\nexport const getPlanetData = (planet: string) : IPlanets => {\r\n  return getPlanets()[planet]\r\n}\r\n\r\nexport const getSelectedPlanetsData = (planetsUrl: string[]) : IPlanets[] => {\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const storedPlanets = useSelector(state => state.planets);\r\n  return planetsUrl.map(url => _.find(storedPlanets, ['url', url]))\r\n}\r\n\r\nexport const getMoviesToDisplay = () : IMovie[] => {\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  return useSelector(state => state.movies);\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 9,\n  cy: 9,\n  r: 9,\n  transform: \"rotate(-180 9 9)\",\n  fill: \"#5FBBCF\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.75 10.6875L9 6.74013L5.25 10.6875\",\n  stroke: \"white\",\n  strokeWidth: 4,\n  strokeLinecap: \"square\"\n});\n\nfunction SvgArrowclose(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowclose);\nexport default __webpack_public_path__ + \"static/media/ARROW CLOSE.45c5a01b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 9,\n  cy: 9,\n  r: 9,\n  fill: \"#00687F\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.25 7.3125L9 11.2599L12.75 7.3125\",\n  stroke: \"white\",\n  strokeWidth: 4,\n  strokeLinecap: \"square\"\n});\n\nfunction SvgArrowopen(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowopen);\nexport default __webpack_public_path__ + \"static/media/ARROW OPEN.89547e76.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Children, ReactElement, useState } from 'react';\r\nimport { ReactComponent as ArrowClose } from '../../assets/icons/ARROW CLOSE.svg'\r\nimport { ReactComponent as ArrowOpen } from '../../assets/icons/ARROW OPEN.svg'\r\nimport styles from './ExpandableItem.module.scss';\r\n\r\ninterface IExpandableElement {\r\n  text: string,\r\n  children?: React.ReactElement<any>\r\n}\r\n\r\nconst ExpandableItem = ({text = 'Expandable Item', children} : IExpandableElement) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  \r\n  const propsChildren = React.Children.toArray(children).map((child) =>\r\n    React.cloneElement(child as ReactElement<any>, { isOpen }),\r\n  )\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={`${styles.item} ${isOpen && styles.expanded}`}>\r\n        <p className={styles.item__text}>{text}</p>\r\n        {isOpen ?\r\n          <ArrowClose onClick={() => setIsOpen(false)} /> :\r\n          <ArrowOpen onClick={() => setIsOpen(true)} />}\r\n      </div>\r\n      <div className={`${styles.expandedField} ${isOpen && styles.expanded}`}>\r\n        {isOpen && propsChildren}\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default ExpandableItem;","import axios from 'axios';\r\nconst API_ROOT = \"https://swapi.dev/api\";\r\n\r\nexport const starWarsApi = axios.create({\r\n  baseURL: API_ROOT\r\n})\r\n ","import { useState, useEffect } from 'react'\r\nimport { starWarsApi } from './api';\r\nimport { IMovie } from './api.types';\r\nimport { setMoviesStore } from '../store/movies/movies.actions'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const useFetchMovies = () => {\r\n  const dispatch = useDispatch();\r\n  const [movies, setMovies] = useState<IMovie[]>([]);\r\n  const [error, setError] = useState<string>('');\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      starWarsApi.get('/films/')\r\n        .then(res => {\r\n          const moviesQuery = res.data.results.map(movie => ({\r\n            title: movie.title,\r\n            planetsUrl: movie.planets\r\n          }))\r\n          setMovies(moviesQuery);\r\n          dispatch(setMoviesStore(moviesQuery))\r\n        })\r\n        .finally(() => setIsLoading(false))\r\n        .catch(err => setError(err.message))\r\n    } catch (err) {\r\n      setError(err.message)\r\n    }\r\n  }, [])\r\n  return { isLoading, movies, error }\r\n}","import React from \"react\";\r\nimport { useSelector } from 'react-redux'\r\nimport Loader from \"../Loader/Loader\";\r\nimport MovieItem from '../MovieItem/MovieItem';\r\nimport ExpandableItem from '../ExpandableItem/ExpandableItem';\r\nimport { useFetchMovies } from '../../api/useFetch';\r\nimport styles from \"./MovieList.module.scss\";\r\n\r\nconst MovieList = () => {\r\n\tconst { isLoading, error } = useFetchMovies();\r\n\tconst movies = useSelector(state => state.movies)\r\n\r\n\tconst renderMovieList = () => {\r\n\t\tif (error) return <div className=\"error\">Smthng went wrong during fetch: {error}</div>;\r\n\t\treturn movies.map((movie, i) => {\r\n\t\t\treturn <>\r\n\t\t\t\t<ExpandableItem key={i} text={movie.title}>\r\n\t\t\t\t\t<MovieItem movie={movie} />\r\n\t\t\t\t</ExpandableItem>\r\n\t\t\t</>\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={styles.MovieList}>\r\n\t\t\t\t{isLoading ?\r\n\t\t\t\t\t<Loader key={`movieListLoader`}/> :\r\n\t\t\t\t\t<div className={styles.MovieListContent}>\r\n\t\t\t\t\t\t{renderMovieList()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MovieList;\r\n","import React from 'react';\r\nimport styles from './Divider.module.scss';\r\n\r\n \r\nconst Divider = () => {\r\n\r\n  return(<div className={styles.Divider}></div>);\r\n}\r\n\r\nexport default Divider;","import React from 'react';\r\n\r\nimport styles from './PlanetItem.module.scss';\r\n\r\ninterface IPlanetItem {\r\n  name: string,\r\n  handleRemove: (name: string) => void\r\n}\r\n\r\nconst PlanetItem = ({name, handleRemove}: IPlanetItem) => {\r\n\r\n  return(\r\n    <div className={styles.PlanetItem}>\r\n      {name} <span onClick={() => handleRemove(name)}className={styles.remove}></span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlanetItem;","import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport styles from './AddMovieForm.module.scss';\r\nimport _ from 'lodash';\r\nimport PlanetItem from \"../PlanetItem/PlanetItem\";\r\nimport { IPlanets, pickData } from \"../../api/api.types\";\r\nimport { dispatch } from \"../../store/store\";\r\nimport { postMovie, UpdatePlanetStore } from \"../../store/movies/movies.actions\";\r\n\r\ninterface IFormData {\r\n\tmovieTitle: string,\r\n\taddPlanet: string\r\n}\r\n\r\ninterface IFormControl {\r\n\tmovieTitle?: string | boolean,\r\n\taddPlanet?: string | boolean\r\n}\r\n\r\ninterface ISelectedPlanets {\r\n\tplanetData: IPlanets[]\r\n}\r\n\r\nconst AddMovieForm = () => {\r\n\tconst [formData, setFormData] = useState<IFormData>({\r\n\t\tmovieTitle: \"\",\r\n\t\taddPlanet: \"\"\r\n\t});\r\n\tconst [autocompleteFetch, setAutocompleteFetch] = useState([]);\r\n\tconst [selectedPlanets, setSelectedPlanets] = useState<IPlanets[]>([]);\r\n\tconst [errors, setErrors] = useState<IFormControl>({});\r\n\tconst [touched, setTouched] = useState<IFormControl>({});\r\n\r\n\tuseEffect(() => {\r\n\t\tvalidate(formData);\r\n\t}, [formData]);\r\n\r\n\tconst validate = (values: IFormData) => {\r\n\t\tconst nextErrors: IFormControl = {};\r\n\r\n\t\tif (!values.movieTitle) {\r\n\t\t\tnextErrors.movieTitle = \"Field is required\";\r\n\t\t} else if (!/^[A-Z]/.test(values.movieTitle)) {\r\n\t\t\tnextErrors.movieTitle = \"Movie title name must start with a capital letter.\"\r\n\t\t}\r\n\r\n\t\tsetErrors(nextErrors);\r\n\t};\r\n\r\n\tconst clearForm = () => {\r\n\t\tsetFormData({\r\n\t\t\taddPlanet: '',\r\n\t\t\tmovieTitle: ''\r\n\t\t});\r\n\t\tsetErrors({});\r\n\t\tsetTouched({});\r\n\t\tsetAutocompleteFetch([]);\r\n\t\tsetSelectedPlanets([]);\r\n\t}\r\n\r\n\tconst handleBlur = ({ target: { value, name } }) => {\r\n\t\tif (!touched[name]) {\r\n\t\t\tsetTouched({ ...touched, [name]: true });\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleChange = ({ target: { value, name } }) => {\r\n\t\tif (name === \"addPlanet\") {\r\n\t\t\t(async () => {\r\n\t\t\t\tif (value === '') {\r\n\t\t\t\t\tsetAutocompleteFetch([]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst results = await axios.get(`https://swapi.dev/api/planets/?search=${value}`).then(res => res.data.results);\r\n\t\t\t\t\tsetAutocompleteFetch(results);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t\tsetFormData({\r\n\t\t\t...formData,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tconst addCustomMovie = () => {\r\n\t}\r\n\t\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (selectedPlanets.length === 0) {\r\n\t\t\tsetErrors({ ...errors, [\"addPlanet\"]: \"At Least One planet needs to be selected\" });\r\n\t\t\treturn\r\n\t\t}\r\n\t\tclearForm();\r\n\t\tdispatch()(postMovie({title: formData.movieTitle, planetsUrl: selectedPlanets.map(p => p.url)}))\r\n\t\tdispatch()(UpdatePlanetStore([]))\r\n\t\t\r\n\t};\r\n\r\n\tconst handleSelectPlanet = (res) => {\r\n\t\tsetAutocompleteFetch([])\r\n\t\tif (_.some(selectedPlanets, {name: res.name})) return;\r\n\t\tsetSelectedPlanets([...selectedPlanets,  _.pick(res, pickData)]);\r\n\t}\r\n\r\n\tconst handleRemovePlanet = name => {\r\n\t\tsetSelectedPlanets(selectedPlanets.filter(planet => planet.name !== name));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.AddMovieFormContainer}>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div className={styles.InputField}>\r\n\t\t\t\t\t<label htmlFor=\"movieTitle\">Movie Title\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tname=\"movieTitle\"\r\n\t\t\t\t\t\t\tid=\"movieTitle\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Please enter the title of the movie\"\r\n\t\t\t\t\t\t\tclassName={errors.movieTitle && touched.movieTitle && styles.errorInput}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\tvalue={formData.movieTitle}\r\n\t\t\t\t\t\t/></label>\r\n\t\t\t\t\t{errors.movieTitle && touched.movieTitle && (<p className={styles.errorMsg}>{errors.movieTitle}</p>)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={styles.InputField}>\r\n\t\t\t\t\t{selectedPlanets.length > 0 && <div className={styles.selectedPlanets}>{selectedPlanets.map(planet => <PlanetItem name={planet.name} handleRemove={handleRemovePlanet} />)}</div>}\r\n\t\t\t\t\t<label htmlFor=\"addPlanet\">Add Planet\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tname=\"addPlanet\"\r\n\t\t\t\t\t\t\tplaceholder=\"Search for the planet in database\"\r\n\t\t\t\t\t\t\tid=\"addPlanet\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName={errors.addPlanet && touched.addPlanet && styles.errorInput}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\tvalue={formData.addPlanet}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{autocompleteFetch.length > 0 &&\r\n\t\t\t\t\t\t\t<div className={styles.hints}>\r\n\t\t\t\t\t\t\t\t{autocompleteFetch.map(res => res.name === 'unknown'? null :  <p onClick={() => handleSelectPlanet(res)}>{res.name}</p>)}\r\n\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t{errors[\"addPlanet\"] && (<p className={styles.errorMsg}>{errors[\"addPlanet\"]}</p>)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tdisabled={Object.keys(errors).length ? true : false}\r\n\t\t\t\t>ADD MOVIE </button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default AddMovieForm;\r\n","import React from 'react';\r\nimport AddMovieForm from '../AddMovieForm/AddMovieForm';\r\nimport ExpandableItem from \"../ExpandableItem/ExpandableItem\";\r\n\r\nimport styles from './AddMovie.module.scss';\r\n\r\nconst AddMovie = () => {\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.AddMovieContainer}>\r\n        <ExpandableItem text='Add Movie'> \r\n          <AddMovieForm />\r\n        </ExpandableItem>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddMovie;","import React from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport MovieList from \"../MovieList/MovieList\";\r\nimport Divider from '../Divider/Divider';\r\nimport AddMovie from \"../AddMovie/AddMovie\";\r\n\r\nimport \"./app.scss\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n      <MovieList />\r\n      <Divider />\r\n      <AddMovie/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from 'react-redux'\r\nimport App from \"./components/App/App\";\r\nimport { store } from \"./store/store\";\r\n\r\nimport \"./styles/main.scss\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}